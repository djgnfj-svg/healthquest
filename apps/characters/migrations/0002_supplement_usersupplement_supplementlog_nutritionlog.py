# Generated by Django 4.2.7 on 2025-06-29 11:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('characters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('vitamin', '비타민'), ('mineral', '미네랄'), ('protein', '단백질'), ('omega', '오메가'), ('herb', '허브'), ('other', '기타')], default='other', max_length=20)),
                ('description', models.TextField(blank=True, help_text='효능 및 설명')),
                ('default_dosage', models.CharField(help_text='권장 복용량', max_length=50)),
                ('precautions', models.TextField(blank=True, help_text='주의사항')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '영양제',
                'verbose_name_plural': '영양제들',
                'db_table': 'supplements',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserSupplement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dosage', models.CharField(help_text='개인 복용량', max_length=50)),
                ('frequency', models.CharField(choices=[('daily', '매일'), ('weekly', '주 몇회'), ('as_needed', '필요시')], default='daily', max_length=20)),
                ('morning', models.BooleanField(default=False)),
                ('afternoon', models.BooleanField(default=False)),
                ('evening', models.BooleanField(default=False)),
                ('personal_notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('started_date', models.DateField(default=django.utils.timezone.now)),
                ('ended_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='characters.supplement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '사용자 영양제',
                'verbose_name_plural': '사용자 영양제들',
                'db_table': 'user_supplements',
                'unique_together': {('user', 'supplement')},
            },
        ),
        migrations.CreateModel(
            name='SupplementLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taken_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('dosage_taken', models.CharField(help_text='실제 복용량', max_length=50)),
                ('time_of_day', models.CharField(choices=[('morning', '아침'), ('afternoon', '오후'), ('evening', '저녁'), ('night', '밤')], max_length=20)),
                ('notes', models.TextField(blank=True, help_text='복용 시 메모')),
                ('side_effects', models.TextField(blank=True, help_text='부작용 기록')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_supplement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='characters.usersupplement')),
            ],
            options={
                'verbose_name': '영양제 복용 기록',
                'verbose_name_plural': '영양제 복용 기록들',
                'db_table': 'supplement_logs',
                'ordering': ['-taken_at'],
            },
        ),
        migrations.CreateModel(
            name='NutritionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('meal_type', models.CharField(choices=[('breakfast', '아침'), ('lunch', '점심'), ('dinner', '저녁'), ('snack', '간식')], max_length=20)),
                ('meal_quality', models.CharField(choices=[('excellent', '매우 건강함'), ('good', '건강함'), ('fair', '보통'), ('poor', '개선 필요')], default='fair', max_length=20)),
                ('included_vegetables', models.BooleanField(default=False, help_text='채소 포함 여부')),
                ('included_protein', models.BooleanField(default=False, help_text='단백질 포함 여부')),
                ('included_grains', models.BooleanField(default=False, help_text='곡물 포함 여부')),
                ('proper_portion', models.BooleanField(default=False, help_text='적절한 양 섭취 여부')),
                ('notes', models.TextField(blank=True, help_text='추가 메모')),
                ('calories_estimate', models.PositiveIntegerField(blank=True, help_text='예상 칼로리', null=True)),
                ('meal_image', models.ImageField(blank=True, null=True, upload_to='nutrition/meals/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '영양 기록',
                'verbose_name_plural': '영양 기록들',
                'db_table': 'nutrition_logs',
                'ordering': ['-date', '-created_at'],
                'unique_together': {('user', 'date', 'meal_type')},
            },
        ),
    ]
