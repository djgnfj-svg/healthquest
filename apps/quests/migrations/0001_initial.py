# Generated by Django 4.2.7 on 2025-06-27 11:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_title', models.CharField(blank=True, max_length=200)),
                ('custom_description', models.TextField(blank=True)),
                ('target_stats', models.JSONField(default=dict)),
                ('experience_reward', models.PositiveIntegerField()),
                ('gold_reward', models.PositiveIntegerField()),
                ('gems_reward', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('assigned', '할당됨'), ('in_progress', '진행 중'), ('completed', '완료'), ('failed', '실패'), ('expired', '만료')], default='assigned', max_length=20)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField()),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('requires_verification', models.BooleanField(default=False)),
                ('verification_image', models.ImageField(blank=True, null=True, upload_to='quest_verifications/')),
                ('verification_note', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '퀘스트',
                'verbose_name_plural': '퀘스트들',
                'db_table': 'quests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('morning', '아침'), ('work', '업무/학습'), ('evening', '저녁'), ('night', '밤'), ('weekly', '주간'), ('challenge', '도전')], default='morning', max_length=20)),
                ('target_stats', models.JSONField(default=dict, help_text="{'stamina': 2, 'strength': 1} 형태로 저장")),
                ('base_experience', models.PositiveIntegerField(default=10)),
                ('base_gold', models.PositiveIntegerField(default=5)),
                ('base_gems', models.PositiveIntegerField(default=0)),
                ('difficulty', models.CharField(choices=[('easy', '쉬움'), ('normal', '보통'), ('hard', '어려움'), ('expert', '전문가')], default='normal', max_length=10)),
                ('duration_minutes', models.PositiveIntegerField(default=30, help_text='예상 소요 시간(분)')),
                ('required_level', models.PositiveIntegerField(default=1)),
                ('weather_condition', models.CharField(choices=[('any', '모든 날씨'), ('sunny', '맑음'), ('cloudy', '흐림'), ('rainy', '비'), ('snowy', '눈')], default='any', max_length=20)),
                ('time_of_day', models.CharField(choices=[('any', '모든 시간'), ('morning', '아침 (06:00-12:00)'), ('afternoon', '오후 (12:00-18:00)'), ('evening', '저녁 (18:00-22:00)'), ('night', '밤 (22:00-06:00)')], default='any', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '퀘스트 템플릿',
                'verbose_name_plural': '퀘스트 템플릿들',
                'db_table': 'quest_templates',
            },
        ),
        migrations.CreateModel(
            name='QuestCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion_time', models.DateTimeField(auto_now_add=True)),
                ('actual_duration', models.DurationField(blank=True, null=True)),
                ('difficulty_rating', models.PositiveIntegerField(blank=True, help_text='사용자가 평가한 난이도 (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('satisfaction_rating', models.PositiveIntegerField(blank=True, help_text='사용자 만족도 (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('user_notes', models.TextField(blank=True)),
                ('quest', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='quests.quest')),
            ],
            options={
                'verbose_name': '퀘스트 완료 기록',
                'verbose_name_plural': '퀘스트 완료 기록들',
                'db_table': 'quest_completions',
            },
        ),
        migrations.AddField(
            model_name='quest',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quests.questtemplate'),
        ),
        migrations.AddField(
            model_name='quest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DailyStreak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_streak', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('last_completion_date', models.DateField(blank=True, null=True)),
                ('streak_start_date', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '연속 완료 기록',
                'verbose_name_plural': '연속 완료 기록들',
                'db_table': 'daily_streaks',
            },
        ),
    ]
